// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PUC.LDSI.DataBase;

namespace PUC.LDSI.DataBase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200302193009_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("turmaId");

                    b.HasKey("Id");

                    b.HasIndex("turmaId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("disciplina")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("materia")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("professorId");

                    b.HasKey("Id");

                    b.HasIndex("professorId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.OpcaoAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("questaoAvaliacaoId");

                    b.Property<bool>("verdadeira");

                    b.HasKey("Id");

                    b.HasIndex("questaoAvaliacaoId");

                    b.ToTable("OpcaoAvaliacao");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.OpcaoProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<int>("opcaoAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("questaoProvaId")
                        .HasColumnType("int");

                    b.Property<bool>("resposta");

                    b.HasKey("Id");

                    b.HasIndex("opcaoAvaliacaoId");

                    b.HasIndex("questaoProvaId");

                    b.ToTable("OpcaoProva");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Prova", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<int>("alunoId")
                        .HasColumnType("int");

                    b.Property<int>("avaliacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataProva")
                        .HasColumnType("datetime");

                    b.Property<decimal>("notaObtida");

                    b.HasKey("Id");

                    b.HasIndex("alunoId");

                    b.HasIndex("avaliacaoId");

                    b.ToTable("Prova");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Publicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<int>("avalicaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("turmaId")
                        .HasColumnType("int");

                    b.Property<int>("valorProva")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("avalicaoId");

                    b.HasIndex("turmaId");

                    b.ToTable("Publicacao");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.QuestaoAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<int>("avaliacaoId")
                        .HasColumnType("int");

                    b.Property<string>("enunciado")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("avaliacaoId");

                    b.ToTable("QuestaoAvaliacao");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.QuestaoProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<decimal>("nota");

                    b.Property<int>("provaId")
                        .HasColumnType("int");

                    b.Property<int>("questaoAvaliacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("provaId");

                    b.HasIndex("questaoAvaliacaoId");

                    b.ToTable("QuestaoProva");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.Turma", "turma")
                        .WithMany("alunos")
                        .HasForeignKey("turmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Avaliacao", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.Professor", "professor")
                        .WithMany("avaliacoes")
                        .HasForeignKey("professorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.OpcaoAvaliacao", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.QuestaoAvaliacao", "questaoAvaliacao")
                        .WithMany("opcoesAvaliacoes")
                        .HasForeignKey("questaoAvaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.OpcaoProva", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.OpcaoAvaliacao", "opcaoAvaliacao")
                        .WithMany("opcoesProvas")
                        .HasForeignKey("opcaoAvaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PUC.LDSI.Domain.Entities.QuestaoProva", "questaoProva")
                        .WithMany("opcoesProvas")
                        .HasForeignKey("questaoProvaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Prova", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.Aluno", "aluno")
                        .WithMany("provas")
                        .HasForeignKey("alunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PUC.LDSI.Domain.Entities.Avaliacao", "avaliacao")
                        .WithMany("provas")
                        .HasForeignKey("avaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.Publicacao", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.Avaliacao", "avaliacao")
                        .WithMany("publicacoes")
                        .HasForeignKey("avalicaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PUC.LDSI.Domain.Entities.Turma", "turma")
                        .WithMany("publicacoes")
                        .HasForeignKey("turmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.QuestaoAvaliacao", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.Avaliacao", "avaliacao")
                        .WithMany("questoesAvaliacoes")
                        .HasForeignKey("avaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PUC.LDSI.Domain.Entities.QuestaoProva", b =>
                {
                    b.HasOne("PUC.LDSI.Domain.Entities.Prova", "prova")
                        .WithMany("questoesProvas")
                        .HasForeignKey("provaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PUC.LDSI.Domain.Entities.QuestaoAvaliacao", "questaoAvaliacao")
                        .WithMany("questoesProvas")
                        .HasForeignKey("questaoAvaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
